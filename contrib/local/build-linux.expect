#!/usr/bin/expect

set UMUNDO_BUILD_HOST $::env(UMUNDO_BUILD_HOST)
set BUILD_TESTS $::env(BUILD_TESTS)

set prompt "sradomski@"
append prompt ${UMUNDO_BUILD_HOST}
append prompt {:[a-zA-Z~\/\-]+\$ }

eval spawn ping -c1 ${UMUNDO_BUILD_HOST}.local.
expect "cannot resolve"  { puts "Host ${UMUNDO_BUILD_HOST}.local. not found"; exit } \
       -re $prompt       { }

eval spawn ssh ${UMUNDO_BUILD_HOST}.local.

##############################
# umundo with avahi in debug configuration
expect -re $prompt { send "rm -rf /tmp/build-umundo && mkdir /tmp/build-umundo && cd /tmp/build-umundo\n" }
expect -re $prompt { send "cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=${BUILD_TESTS} -DDIST_PREPARE=ON /media/psf/Home/Documents/TK/Code/umundo\n" }

expect -re $prompt { send "make -j2\n" }
expect "Building CXX" { exp_continue } \
       -re $prompt { send "\n" }

expect -re $prompt { send "make -j2 java\n" }
expect "Building CXX" { exp_continue } \
       -re $prompt { send "\n" }

if { [string compare $BUILD_TESTS "ON"] == 0 } {
  expect -re $prompt { send "make test\n" }
  expect "Start" { exp_continue } \
         -re $prompt { send "\n" }
}

##############################
# umundo with avahi in release configuration
expect -re $prompt { send "rm -rf /tmp/build-umundo && mkdir /tmp/build-umundo && cd /tmp/build-umundo\n" }
expect -re $prompt { send "cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=${BUILD_TESTS} -DDIST_PREPARE=ON /media/psf/Home/Documents/TK/Code/umundo\n" }
expect -re $prompt { send "make\n" }

expect "Building CXX" { exp_continue } \
       -re $prompt    { send "\n" }

expect -re $prompt { send "make -j2 java\n" }
expect "Building CXX" { exp_continue } \
       -re $prompt { send "\n" }

if { [string compare $BUILD_TESTS "ON"] == 0 } {
  expect -re $prompt { send "make test\n" }
  expect "Start" { exp_continue } \
         -re $prompt { send "\n" }
}

